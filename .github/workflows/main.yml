# This is a basic workflow to help you get started with Actions
name: WordPress Vulnerability Check
  uses: umutphp/wp-vulnerability-check-github-action@v13
  with:
    # Root path of your WordPress installation
    path: 
    # Token got from wpvulndb.com
    token: 
    # Root path of plugins if it is different than default
    pluginPath: # optional, default is ./wp-content/plugins/
    # Root path ofmu-plugins if it is different than default
    MUpluginPath: # optional, default is ./wp-content/mu-plugins/
    # The plugins to be excluded. In order to exclude your custom plugins
    exclude: # optional, default is verycustomplugin
name: Run phpcs-wordpress with reviewdog
  # You may pin to the exact commit or the version.
  # uses: oohnoitz/action-phpcs-wordpress@7b77b10565a8fec6f4719e545dc9581aa155e5dc
  uses: oohnoitz/action-phpcs-wordpress@v1.2.0
  with:
    # GITHUB_TOKEN
    github_token: # optional, default is ${{ github.token }}
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is phpcs
    # Working directory relative to the root directory.
    workdir: # optional, default is .
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    # Additional PHPCS flags
    phpcs_args: # optional, default is .
    # Coding standard for PHPCS to use when checking files
    phpcs_standard: # optional, default is WordPress
